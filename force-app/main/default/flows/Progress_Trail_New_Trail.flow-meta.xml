<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <name>actionCreateTrailSegments</name>
        <label>Create Trail Segments</label>
        <locationX>849</locationX>
        <locationY>193</locationY>
        <actionName>ProgressTrailApexAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>setCountNewSegments</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>ParamExternalActiveGuidanceType</name>
            <value>
                <elementReference>input02_ExternalGuidanceActiveType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ParamInternalActiveGuidanceType</name>
            <value>
                <elementReference>input02_InternalGuidanceActiveType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ParamPassRecordIdToExternalFlow</name>
            <value>
                <elementReference>input02_PassRecordIdToExternalFlow</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ParamPassRecordIdToInternalFlow</name>
            <value>
                <elementReference>input02_PassRecordIdToInternalFlow</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ParamTrailId</name>
            <value>
                <elementReference>createProgressTrail</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>setCountConflicts</name>
        <label>Count Conflicts</label>
        <locationX>571</locationX>
        <locationY>371</locationY>
        <assignmentItems>
            <assignToReference>countConflictingTrails</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>getConflictingTrails</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decAnyTrailsWithSameName</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setCountNewSegments</name>
        <label>Count New Segments</label>
        <locationX>964</locationX>
        <locationY>193</locationY>
        <assignmentItems>
            <assignToReference>countNewSegments</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>actionCreateTrailSegments.segList</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decSegmentsCreated</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setError</name>
        <label>Set Error</label>
        <locationX>403</locationX>
        <locationY>192</locationY>
        <assignmentItems>
            <assignToReference>errorTrailsWithSameName</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>s02</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setResetVars</name>
        <label>Reset Vars</label>
        <locationX>288</locationX>
        <locationY>371</locationY>
        <assignmentItems>
            <assignToReference>errorTrailsWithSameName</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>countConflictingTrails</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getConflictingTrails</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setSegmentWarning</name>
        <label>Set Segment Warning</label>
        <locationX>1299</locationX>
        <locationY>256</locationY>
        <assignmentItems>
            <assignToReference>errorNoSegmentsCreated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>s99</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>decAnyTrailsWithSameName</name>
        <label>Any Trails with the Same Name?</label>
        <locationX>563</locationX>
        <locationY>194</locationY>
        <defaultConnector>
            <targetReference>createProgressTrail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NO</defaultConnectorLabel>
        <rules>
            <name>outTrailsWithSameNameYES</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>countConflictingTrails</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setError</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <decisions>
        <name>decSegmentsCreated</name>
        <label>Segments Created?</label>
        <locationX>1078</locationX>
        <locationY>195</locationY>
        <defaultConnector>
            <targetReference>setSegmentWarning</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Created</defaultConnectorLabel>
        <rules>
            <name>outSegmentsCreatedYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>countNewSegments</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>s99</targetReference>
            </connector>
            <label>Created</label>
        </rules>
    </decisions>
    <description>Flow used to create Progress Trails and automate the creation of Progress Trail Segments based on the designated picklist field.

1/5/2022:  Continuation of logic creation.</description>
    <dynamicChoiceSets>
        <name>picklistExternalGuidanceActiveType</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>External_Guidance_Active_Type__c</picklistField>
        <picklistObject>Progress_Trail_Segment__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>picklistInternalGuidanceActiveType</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Internal_Guidance_Active_Type__c</picklistField>
        <picklistObject>Progress_Trail_Segment__c</picklistObject>
    </dynamicChoiceSets>
    <interviewLabel>Progress Trail - New Trail {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Progress Trail - New Trail</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>createProgressTrail</name>
        <label>Create Progress Trail</label>
        <locationX>729</locationX>
        <locationY>193</locationY>
        <connector>
            <targetReference>actionCreateTrailSegments</targetReference>
        </connector>
        <inputAssignments>
            <field>Developer_Notes__c</field>
            <value>
                <elementReference>input02_DeveloperNotes</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>input02_Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Related_Object_API_Name__c</field>
            <value>
                <elementReference>input02_ObjectAPIName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status_Field_API_Name__c</field>
            <value>
                <elementReference>input02_FieldAPIName</elementReference>
            </value>
        </inputAssignments>
        <object>Progress_Trail__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Any existing trails by that same name?  That would be bad.</description>
        <name>getConflictingTrails</name>
        <label>Get Conflicting Trails</label>
        <locationX>403</locationX>
        <locationY>371</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>setCountConflicts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>setCountConflicts</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>input02_Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Progress_Trail__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>s01</name>
        <label>Start</label>
        <locationX>176</locationX>
        <locationY>192</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>s02</targetReference>
        </connector>
        <fields>
            <name>title01</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 20px;&quot;&gt;Ready to Hike the Progress Trail?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Create a New Progress Trail&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>text01a</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;This little component shows the familiar progress path for your record, sure. So why use it?&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Guidance can be set to show rich text or an embedded Flow.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Mix and match rich text and flows from step-to-step in the path.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Display different guidance to internal and external users.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;You define a &lt;/span&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Progress Trail&lt;/b&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt; that you can use on an object. You select the object and picklist field to use.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Then, Salesforce auto-creates &lt;/span&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Progress Trail Segments&lt;/b&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt; for each active picklist value. Each segment can be configured to show different rich text or flows to internal and external users.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Once the segments are configured, add the Progress Trail component to your Lightning record page layout.  You provide the name of the trail you want to use and set any other configurable properties.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Ready?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Create a New Progress Trail Now &gt;</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>s02</name>
        <label>Enter Details</label>
        <locationX>288</locationX>
        <locationY>192</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>setResetVars</targetReference>
        </connector>
        <fields>
            <name>title02</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 20px;&quot;&gt;Ready to Hike the Progress Trail?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Create a New Progress Trail&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>error01a</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;😵‍💫 Womp womp!  You already have a Progress Trail with that name, and that would make family dinners a little awkward.  Give this new trail a a different name.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>errorTrailsWithSameName</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>text02a</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;To create a new Progress Trail, enter your details below:&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input02_Name</name>
            <dataType>String</dataType>
            <defaultValue>
                <stringValue>Test</stringValue>
            </defaultValue>
            <fieldText>Progress Trail Name (must be unique):</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;b&gt;Provide a unique name for the new Progress Trail.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;You will refer to this whenever you drag and drop the Progress Trail component onto a Lightning record page.  It is used to know which trail to display to end users (since you might have more than one per record or even more than one per record type!).&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&quot;Case Status&quot;&lt;/li&gt;&lt;li&gt;&quot;My Awesome Record Progress&quot;&lt;/li&gt;&lt;li&gt;&quot;casestatus&quot;&lt;/li&gt;&lt;/ul&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>input02_ObjectAPIName</name>
            <dataType>String</dataType>
            <defaultValue>
                <stringValue>Case</stringValue>
            </defaultValue>
            <fieldText>Object API Name (Account, Case, Custom_Object__c, etc.):</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;b&gt;Enter the API name of the object you will be using this trail for (standard and custom objects supported).&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Standard object:  Case&lt;/li&gt;&lt;li&gt;Custom object:  Custom_Object__c&lt;/li&gt;&lt;/ul&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>input02_FieldAPIName</name>
            <dataType>String</dataType>
            <defaultValue>
                <stringValue>Status</stringValue>
            </defaultValue>
            <fieldText>Status Field API Name (Status, Custom_Picklist_Field__c, etc.):</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;b&gt;Enter the API name of the picklist field you want to use from the object you specified above.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;This &lt;u&gt;picklist&lt;/u&gt; field will be used to generate the multi-step progress path and for displaying guidance for each step.  &lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;Only works for picklists - you will get errors if you designate other types of fields&lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Standard Case status field:  Status&lt;/li&gt;&lt;li&gt;Custom field:  Custom_Picklist_Field__c&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>input02_DeveloperNotes</name>
            <fieldText>Developer Notes</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <helpText>&lt;p&gt;Your notes on when/how/where you use this trail (just for you - not used/displayed in the component).&lt;/p&gt;</helpText>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>s02_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>s02_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>text02b</name>
                    <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 14px; color: rgb(0, 0, 0);&quot;&gt;Some Settings for Each Segment in Your New Progress Trail&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;i style=&quot;font-size: 14px; color: rgb(0, 0, 0);&quot;&gt;Designate the default settings to preload when we auto-create segments for each picklist value (don&apos;t worry, you can change these later, one-by-one).&lt;/i&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>s02_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>s02_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>text02c</name>
                    <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0); font-size: 14px;&quot;&gt;Internal Guidance Settings&lt;/b&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>input02_InternalGuidanceActiveType</name>
                    <choiceReferences>picklistInternalGuidanceActiveType</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <stringValue>Display Rich Text</stringValue>
                    </defaultValue>
                    <fieldText>Active Guidance Type</fieldText>
                    <fieldType>RadioButtons</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>input02_PassRecordIdToInternalFlow</name>
                    <dataType>Boolean</dataType>
                    <defaultValue>
                        <booleanValue>false</booleanValue>
                    </defaultValue>
                    <fieldText>Pass recordId to Flow, if Active</fieldText>
                    <fieldType>InputField</fieldType>
                    <helpText>&lt;p&gt;When checked and the active internal guidance type is set to Flow, the current record&apos;s Id will be passed to the designated Flow as an input variable called &lt;b&gt;recordId&lt;/b&gt;.&lt;/p&gt;</helpText>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>s02_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>text02d</name>
                    <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;External Guidance Settings&lt;/b&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>input02_ExternalGuidanceActiveType</name>
                    <choiceReferences>picklistExternalGuidanceActiveType</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <stringValue>Display Rich Text</stringValue>
                    </defaultValue>
                    <fieldText>Active Guidance Type</fieldText>
                    <fieldType>RadioButtons</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>input02_PassRecordIdToExternalFlow</name>
                    <dataType>Boolean</dataType>
                    <defaultValue>
                        <booleanValue>false</booleanValue>
                    </defaultValue>
                    <fieldText>Pass recordId to Flow, if Active</fieldText>
                    <fieldType>InputField</fieldType>
                    <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;When checked and the active external guidance type is set to Flow, the current record&apos;s Id will be passed to the designated Flow as an input variable called &lt;/span&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;recordId&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</helpText>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>s99</name>
        <label>Finished</label>
        <locationX>1299</locationX>
        <locationY>123</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>title99</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 20px;&quot;&gt;Ready to Hike the Progress Trail?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Create a New Progress Trail&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>error99a</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); font-size: 14px;&quot;&gt;Well, we tried to create Segments for the field you mentioned, but something happened and {!countNewSegments} were created.  You may have to create them manually from the Progress Trail record.  Sorry about that.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>errorNoSegmentsCreated</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>text99a</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;That&apos;s it!  Your new Progress Trail, &lt;/span&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;{!input02_Name}&lt;/b&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;, is ready to be configured.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Salesforce auto-created &lt;/span&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;{!countNewSegments}&lt;/b&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt; Progress Trail Segments... one for each active value in the &lt;/span&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;{!input02_ObjectAPIName}&lt;/b&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt; object&apos;s &lt;/span&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;{!input02_FieldAPIName}&lt;/b&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt; picklist field. Visit your Progress Trail record and edit each of the segments to designate the rich text and/or flows you wish to show to internal and external users.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Once the segments are configured, add the Progress Trail component to your Lightning record page layout.  You provide the name of the trail you want to use and set any other configurable properties.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>s01</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>countConflictingTrails</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>countNewSegments</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>errorNoSegmentsCreated</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>errorTrailsWithSameName</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>varDraftSegment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Progress_Trail_Segment__c</objectType>
    </variables>
    <variables>
        <name>varDraftSegmentColl</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Progress_Trail_Segment__c</objectType>
    </variables>
</Flow>
